// Code generated by protoc-gen-go. DO NOT EDIT.
// source: github.com/microhq/event-srv/proto/event/event.proto

/*
Package go_micro_srv_event is a generated protocol buffer package.

It is generated from these files:
	github.com/microhq/event-srv/proto/event/event.proto

It has these top-level messages:
	Record
	ReadRequest
	ReadResponse
	CreateRequest
	CreateResponse
	UpdateRequest
	UpdateResponse
	DeleteRequest
	DeleteResponse
	SearchRequest
	SearchResponse
	StreamRequest
	StreamResponse
*/
package go_micro_srv_event

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Record struct {
	Id        string            `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Type      string            `protobuf:"bytes,2,opt,name=type" json:"type,omitempty"`
	Origin    string            `protobuf:"bytes,3,opt,name=origin" json:"origin,omitempty"`
	Timestamp int64             `protobuf:"varint,4,opt,name=timestamp" json:"timestamp,omitempty"`
	RootId    string            `protobuf:"bytes,5,opt,name=root_id,json=rootId" json:"root_id,omitempty"`
	Metadata  map[string]string `protobuf:"bytes,6,rep,name=metadata" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Data      string            `protobuf:"bytes,7,opt,name=data" json:"data,omitempty"`
}

func (m *Record) Reset()                    { *m = Record{} }
func (m *Record) String() string            { return proto.CompactTextString(m) }
func (*Record) ProtoMessage()               {}
func (*Record) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Record) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Record) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *Record) GetOrigin() string {
	if m != nil {
		return m.Origin
	}
	return ""
}

func (m *Record) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *Record) GetRootId() string {
	if m != nil {
		return m.RootId
	}
	return ""
}

func (m *Record) GetMetadata() map[string]string {
	if m != nil {
		return m.Metadata
	}
	return nil
}

func (m *Record) GetData() string {
	if m != nil {
		return m.Data
	}
	return ""
}

type ReadRequest struct {
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
}

func (m *ReadRequest) Reset()                    { *m = ReadRequest{} }
func (m *ReadRequest) String() string            { return proto.CompactTextString(m) }
func (*ReadRequest) ProtoMessage()               {}
func (*ReadRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *ReadRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type ReadResponse struct {
	Record *Record `protobuf:"bytes,1,opt,name=record" json:"record,omitempty"`
}

func (m *ReadResponse) Reset()                    { *m = ReadResponse{} }
func (m *ReadResponse) String() string            { return proto.CompactTextString(m) }
func (*ReadResponse) ProtoMessage()               {}
func (*ReadResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *ReadResponse) GetRecord() *Record {
	if m != nil {
		return m.Record
	}
	return nil
}

type CreateRequest struct {
	Record *Record `protobuf:"bytes,1,opt,name=record" json:"record,omitempty"`
}

func (m *CreateRequest) Reset()                    { *m = CreateRequest{} }
func (m *CreateRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateRequest) ProtoMessage()               {}
func (*CreateRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *CreateRequest) GetRecord() *Record {
	if m != nil {
		return m.Record
	}
	return nil
}

type CreateResponse struct {
}

func (m *CreateResponse) Reset()                    { *m = CreateResponse{} }
func (m *CreateResponse) String() string            { return proto.CompactTextString(m) }
func (*CreateResponse) ProtoMessage()               {}
func (*CreateResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

type UpdateRequest struct {
	Record *Record `protobuf:"bytes,1,opt,name=record" json:"record,omitempty"`
}

func (m *UpdateRequest) Reset()                    { *m = UpdateRequest{} }
func (m *UpdateRequest) String() string            { return proto.CompactTextString(m) }
func (*UpdateRequest) ProtoMessage()               {}
func (*UpdateRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *UpdateRequest) GetRecord() *Record {
	if m != nil {
		return m.Record
	}
	return nil
}

type UpdateResponse struct {
}

func (m *UpdateResponse) Reset()                    { *m = UpdateResponse{} }
func (m *UpdateResponse) String() string            { return proto.CompactTextString(m) }
func (*UpdateResponse) ProtoMessage()               {}
func (*UpdateResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

type DeleteRequest struct {
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
}

func (m *DeleteRequest) Reset()                    { *m = DeleteRequest{} }
func (m *DeleteRequest) String() string            { return proto.CompactTextString(m) }
func (*DeleteRequest) ProtoMessage()               {}
func (*DeleteRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *DeleteRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type DeleteResponse struct {
}

func (m *DeleteResponse) Reset()                    { *m = DeleteResponse{} }
func (m *DeleteResponse) String() string            { return proto.CompactTextString(m) }
func (*DeleteResponse) ProtoMessage()               {}
func (*DeleteResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

type SearchRequest struct {
	// optional root_id
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	// optional
	Type string `protobuf:"bytes,2,opt,name=type" json:"type,omitempty"`
	// timeseries bounds
	From int64 `protobuf:"varint,3,opt,name=from" json:"from,omitempty"`
	To   int64 `protobuf:"varint,4,opt,name=to" json:"to,omitempty"`
	// range bounds
	Limit  int64 `protobuf:"varint,5,opt,name=limit" json:"limit,omitempty"`
	Offset int64 `protobuf:"varint,6,opt,name=offset" json:"offset,omitempty"`
	// order
	Reverse bool `protobuf:"varint,7,opt,name=reverse" json:"reverse,omitempty"`
}

func (m *SearchRequest) Reset()                    { *m = SearchRequest{} }
func (m *SearchRequest) String() string            { return proto.CompactTextString(m) }
func (*SearchRequest) ProtoMessage()               {}
func (*SearchRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func (m *SearchRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *SearchRequest) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *SearchRequest) GetFrom() int64 {
	if m != nil {
		return m.From
	}
	return 0
}

func (m *SearchRequest) GetTo() int64 {
	if m != nil {
		return m.To
	}
	return 0
}

func (m *SearchRequest) GetLimit() int64 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *SearchRequest) GetOffset() int64 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *SearchRequest) GetReverse() bool {
	if m != nil {
		return m.Reverse
	}
	return false
}

type SearchResponse struct {
	Records []*Record `protobuf:"bytes,1,rep,name=records" json:"records,omitempty"`
}

func (m *SearchResponse) Reset()                    { *m = SearchResponse{} }
func (m *SearchResponse) String() string            { return proto.CompactTextString(m) }
func (*SearchResponse) ProtoMessage()               {}
func (*SearchResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

func (m *SearchResponse) GetRecords() []*Record {
	if m != nil {
		return m.Records
	}
	return nil
}

type StreamRequest struct {
	// types to watch
	Types []string `protobuf:"bytes,1,rep,name=types" json:"types,omitempty"`
}

func (m *StreamRequest) Reset()                    { *m = StreamRequest{} }
func (m *StreamRequest) String() string            { return proto.CompactTextString(m) }
func (*StreamRequest) ProtoMessage()               {}
func (*StreamRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{11} }

func (m *StreamRequest) GetTypes() []string {
	if m != nil {
		return m.Types
	}
	return nil
}

type StreamResponse struct {
	Record *Record `protobuf:"bytes,1,opt,name=record" json:"record,omitempty"`
}

func (m *StreamResponse) Reset()                    { *m = StreamResponse{} }
func (m *StreamResponse) String() string            { return proto.CompactTextString(m) }
func (*StreamResponse) ProtoMessage()               {}
func (*StreamResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{12} }

func (m *StreamResponse) GetRecord() *Record {
	if m != nil {
		return m.Record
	}
	return nil
}

func init() {
	proto.RegisterType((*Record)(nil), "go.micro.srv.event.Record")
	proto.RegisterType((*ReadRequest)(nil), "go.micro.srv.event.ReadRequest")
	proto.RegisterType((*ReadResponse)(nil), "go.micro.srv.event.ReadResponse")
	proto.RegisterType((*CreateRequest)(nil), "go.micro.srv.event.CreateRequest")
	proto.RegisterType((*CreateResponse)(nil), "go.micro.srv.event.CreateResponse")
	proto.RegisterType((*UpdateRequest)(nil), "go.micro.srv.event.UpdateRequest")
	proto.RegisterType((*UpdateResponse)(nil), "go.micro.srv.event.UpdateResponse")
	proto.RegisterType((*DeleteRequest)(nil), "go.micro.srv.event.DeleteRequest")
	proto.RegisterType((*DeleteResponse)(nil), "go.micro.srv.event.DeleteResponse")
	proto.RegisterType((*SearchRequest)(nil), "go.micro.srv.event.SearchRequest")
	proto.RegisterType((*SearchResponse)(nil), "go.micro.srv.event.SearchResponse")
	proto.RegisterType((*StreamRequest)(nil), "go.micro.srv.event.StreamRequest")
	proto.RegisterType((*StreamResponse)(nil), "go.micro.srv.event.StreamResponse")
}

func init() {
	proto.RegisterFile("github.com/microhq/event-srv/proto/event/event.proto", fileDescriptor0)
}

var fileDescriptor0 = []byte{
	// 561 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x54, 0xcd, 0x6e, 0xd3, 0x40,
	0x10, 0x8e, 0xed, 0xc4, 0x6d, 0x26, 0x24, 0x8a, 0x56, 0x15, 0x58, 0x11, 0xa8, 0xc1, 0x12, 0x52,
	0x2e, 0x38, 0x28, 0xf4, 0x80, 0xe0, 0x46, 0x53, 0x24, 0x84, 0x38, 0xb0, 0x11, 0x67, 0xe4, 0xc6,
	0x93, 0x64, 0x45, 0x9c, 0x4d, 0xd7, 0x9b, 0x48, 0x79, 0x0d, 0x5e, 0x80, 0xa7, 0xe4, 0x8e, 0xf6,
	0xaf, 0xad, 0x83, 0xdd, 0x43, 0xb9, 0x44, 0x33, 0xb3, 0xdf, 0x7c, 0x99, 0x9f, 0x6f, 0x0c, 0x17,
	0x4b, 0x26, 0x57, 0xbb, 0xeb, 0x64, 0xce, 0xf3, 0x71, 0xce, 0xe6, 0x82, 0xaf, 0x6e, 0xc6, 0xb8,
	0xc7, 0x8d, 0x7c, 0x5d, 0x88, 0xfd, 0x78, 0x2b, 0xb8, 0xe4, 0xc6, 0x37, 0xbf, 0x89, 0x8e, 0x10,
	0xb2, 0xe4, 0x89, 0x46, 0x27, 0x85, 0xd8, 0x27, 0xfa, 0x25, 0xfe, 0xe5, 0x43, 0x48, 0x71, 0xce,
	0x45, 0x46, 0x7a, 0xe0, 0xb3, 0x2c, 0xf2, 0x86, 0xde, 0xa8, 0x4d, 0x7d, 0x96, 0x11, 0x02, 0x4d,
	0x79, 0xd8, 0x62, 0xe4, 0xeb, 0x88, 0xb6, 0xc9, 0x53, 0x08, 0xb9, 0x60, 0x4b, 0xb6, 0x89, 0x02,
	0x1d, 0xb5, 0x1e, 0x79, 0x0e, 0x6d, 0xc9, 0x72, 0x2c, 0x64, 0x9a, 0x6f, 0xa3, 0xe6, 0xd0, 0x1b,
	0x05, 0xf4, 0x2e, 0x40, 0x9e, 0xc1, 0x89, 0xe0, 0x5c, 0xfe, 0x60, 0x59, 0xd4, 0x32, 0x69, 0xca,
	0xfd, 0x9c, 0x91, 0x29, 0x9c, 0xe6, 0x28, 0xd3, 0x2c, 0x95, 0x69, 0x14, 0x0e, 0x83, 0x51, 0x67,
	0x32, 0x4a, 0xfe, 0x2d, 0x32, 0x31, 0x05, 0x26, 0x5f, 0x2d, 0xf4, 0x6a, 0x23, 0xc5, 0x81, 0xde,
	0x66, 0xaa, 0x42, 0x35, 0xc3, 0x89, 0x29, 0x54, 0xd9, 0x83, 0x0f, 0xd0, 0x2d, 0xc1, 0x49, 0x1f,
	0x82, 0x9f, 0x78, 0xb0, 0xed, 0x29, 0x93, 0x9c, 0x41, 0x6b, 0x9f, 0xae, 0x77, 0xae, 0x41, 0xe3,
	0xbc, 0xf7, 0xdf, 0x79, 0xf1, 0x0b, 0xe8, 0x50, 0x4c, 0x33, 0x8a, 0x37, 0x3b, 0x2c, 0xe4, 0xf1,
	0x60, 0xe2, 0x8f, 0xf0, 0xc4, 0x3c, 0x17, 0x5b, 0xbe, 0x29, 0x90, 0x4c, 0x20, 0x14, 0xba, 0x42,
	0x8d, 0xe9, 0x4c, 0x06, 0xf5, 0x3d, 0x50, 0x8b, 0x8c, 0x2f, 0xa1, 0x7b, 0x29, 0x30, 0x95, 0xe8,
	0xfe, 0xe4, 0x31, 0x24, 0x7d, 0xe8, 0x39, 0x12, 0x53, 0x8a, 0xa2, 0xfd, 0xbe, 0xcd, 0xfe, 0x9f,
	0xd6, 0x91, 0x58, 0xda, 0x73, 0xe8, 0x4e, 0x71, 0x8d, 0x77, 0xb4, 0xc7, 0x23, 0xe9, 0x43, 0xcf,
	0x01, 0x6c, 0xca, 0x6f, 0x0f, 0xba, 0x33, 0x4c, 0xc5, 0x7c, 0x55, 0x93, 0x53, 0xa9, 0x2f, 0x02,
	0xcd, 0x85, 0xe0, 0xb9, 0x56, 0x57, 0x40, 0xb5, 0xad, 0xf2, 0x24, 0xb7, 0xa2, 0xf2, 0x25, 0x57,
	0x7b, 0x5b, 0xb3, 0x9c, 0x49, 0xad, 0xa5, 0x80, 0x1a, 0x47, 0x2b, 0x73, 0xb1, 0x28, 0x50, 0x46,
	0xa1, 0x0e, 0x5b, 0x8f, 0x44, 0x70, 0x22, 0x70, 0x8f, 0xa2, 0x40, 0xad, 0x8f, 0x53, 0xea, 0xdc,
	0xf8, 0x13, 0xf4, 0x5c, 0x81, 0x76, 0x91, 0x17, 0x0a, 0xab, 0x46, 0x50, 0x44, 0x9e, 0x56, 0xe3,
	0x43, 0xd3, 0x72, 0xd0, 0xf8, 0x15, 0x74, 0x67, 0x52, 0x60, 0x9a, 0xbb, 0x46, 0xcf, 0xa0, 0xa5,
	0x9a, 0x31, 0x24, 0x6d, 0x6a, 0x9c, 0x78, 0x0a, 0x3d, 0x07, 0x7b, 0xbc, 0x6e, 0x26, 0x7f, 0x02,
	0x68, 0x5d, 0xa9, 0x07, 0xf2, 0x05, 0x9a, 0x4a, 0x85, 0xe4, 0xbc, 0x3a, 0xeb, 0x56, 0xbe, 0x83,
	0x61, 0x3d, 0xc0, 0xee, 0xaa, 0x41, 0xbe, 0x41, 0x68, 0x94, 0x44, 0x5e, 0x56, 0xa1, 0x4b, 0x52,
	0x1d, 0xc4, 0x0f, 0x41, 0xee, 0x53, 0x9a, 0xf1, 0x56, 0x53, 0x96, 0xb4, 0x51, 0x4d, 0x59, 0xde,
	0x4e, 0xdc, 0x20, 0x33, 0x08, 0xcd, 0x08, 0x6b, 0x28, 0xef, 0x6f, 0xa1, 0x86, 0xb2, 0xb4, 0x81,
	0xb8, 0xf1, 0xc6, 0x53, 0x75, 0x1a, 0xb5, 0x57, 0x93, 0x96, 0xce, 0xa9, 0x9a, 0xf4, 0xe8, 0x58,
	0x74, 0xeb, 0xe6, 0x1a, 0xaa, 0x29, 0x4b, 0xa7, 0x54, 0x4d, 0x79, 0x74, 0x4c, 0x8d, 0xeb, 0x50,
	0x7f, 0xc2, 0xdf, 0xfe, 0x0d, 0x00, 0x00, 0xff, 0xff, 0xe3, 0xb4, 0x64, 0x5d, 0xfa, 0x05, 0x00,
	0x00,
}
